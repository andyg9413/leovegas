services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "${PORT}:3000"
    environment:
      - NODE_ENV=${NODE_ENV}
      - DB_HOST=db
      - DB_PORT=${DB_PORT}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRATION=${JWT_EXPIRATION}
      - SWAGGER_TITLE=${SWAGGER_TITLE}
      - SWAGGER_DESCRIPTION=${SWAGGER_DESCRIPTION}
      - SWAGGER_VERSION=${SWAGGER_VERSION}
      - SWAGGER_PATH=${SWAGGER_PATH}
    depends_on:
      db:
        condition: service_healthy
    command: sh -c "./scripts/wait-for-db.sh db ${DB_PORT} && npm run migration:run && npm run start:prod"
    restart: unless-stopped

  db:
    image: mysql:8.0
    command: --default-authentication-plugin=mysql_native_password
    security_opt:
      - seccomp:unconfined
    ports:
      - '${DB_PORT}:3306'
    volumes:
      - mysql_data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${DB_PASSWORD}"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

volumes:
  mysql_data: 